document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'timeGridWeek',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        events: "/api/events/",
        editable: true,
        selectable: true,
        nowIndicator: true,
    });

    calendar.render();

    // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –≥—Ä–µ–π–¥–æ–≤ –û–î–ù–ò–ú –ó–ê–ü–†–û–°–û–ú
    function loadData() {
        Promise.all([
            fetch("/api/clients/").then(res => res.json()),
            fetch("/api/grades/").then(res => res.json())
        ])
        .then(([clientsData, gradesData]) => {
            let supplierSelect = document.getElementById("supplier");
            let buyerSelect = document.getElementById("buyer");
            let gradeSelect = document.getElementById("shipment-grade");

            clientsData.suppliers.forEach(client => {
                supplierSelect.appendChild(new Option(client.name, client.id));
            });

            clientsData.buyers.forEach(client => {
                buyerSelect.appendChild(new Option(client.name, client.id));
            });

            gradesData.forEach(grade => {
                gradeSelect.appendChild(new Option(grade, grade));
            });
        })
        .catch(error => console.error("üö® Error loading clients/grades:", error));
    }

    loadData();

    // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–≥—Ä—É–∑–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    function loadShipments() {
        fetch("/api/shipments/")
            .then(response => response.json())
            .then(data => {
                let shipmentListContainer = document.getElementById("shipment-list");
                shipmentListContainer.innerHTML = ""; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º

                let shipmentsByDay = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
                let today = new Date();
                let nextWeek = new Date();
                nextWeek.setDate(today.getDate() + 7); // üìå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 7 –¥–Ω–µ–π

                // üìå –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö
                calendar.getEvents().forEach(event => event.remove());

                data.forEach(shipment => {
                    let date = new Date(`${shipment.date}T${shipment.time}:00Z`); // üìå –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤ UTC
                    let dayOfWeek = date.toLocaleDateString("en-US", { weekday: "long", timeZone: "UTC" }); // üìå –£–∫–∞–∑—ã–≤–∞–µ–º "UTC"

                    if (date >= today && date <= nextWeek) { // üìå –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ 7 –¥–Ω—è–º
                        if (!shipmentsByDay[dayOfWeek]) {
                            shipmentsByDay[dayOfWeek] = [];
                        }

                        shipmentsByDay[dayOfWeek].push(shipment);

                        // üìå –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≥—Ä—É–∑–∫—É –≤ FullCalendar
                        calendar.addEvent({
                            title: `${shipment.supplier} ‚Üí ${shipment.buyer} (${shipment.grade})`,
                            start: date.toISOString(), // üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è UTC
                            allDay: false
                        });
                    }
                });

                // üìå –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
                Object.keys(shipmentsByDay).forEach(day => {
                    let dayContainer = document.createElement("div");
                    dayContainer.classList.add("shipment-day");

                    let title = document.createElement("h4");
                    title.textContent = day;
                    dayContainer.appendChild(title);

                    let table = document.createElement("table");
                    table.classList.add("shipment-table");
                    table.innerHTML = `
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Time</th>
                                <th>Supplier</th>
                                <th>Buyer</th>
                                <th>Grade</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${shipmentsByDay[day].map(shipment => `
                                <tr>
                                    <td>${shipment.date}</td>
                                    <td>${shipment.time}</td>
                                    <td>${shipment.supplier}</td>
                                    <td>${shipment.buyer}</td>
                                    <td>${shipment.grade}</td>
                                </tr>
                            `).join("")}
                        </tbody>
                    `;
                    dayContainer.appendChild(table);
                    shipmentListContainer.appendChild(dayContainer);
                });
            })
            .catch(error => console.error("üö® Error loading shipments:", error));
    }


    loadShipments(); // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–≥—Ä—É–∑–∫–∏ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≥—Ä—É–∑–∫–∏
    document.getElementById("add-shipment-form").addEventListener("submit", function (e) {
        e.preventDefault();

        let supplier = document.getElementById("supplier").value;
        let buyer = document.getElementById("buyer").value;
        let date = document.getElementById("shipment-date").value;
        let time = document.getElementById("shipment-time").value;
        let grade = document.getElementById("shipment-grade").value;

        if (!supplier || !buyer || !date || !time || !grade) {
            alert("‚ùå Please fill in all fields!");
            return;
        }

        let shipmentData = {
            supplier: supplier,
            buyer: buyer,
            datetime: `${date}T${time}:00`,
            grade: grade
        };

        fetch("/api/shipments/add/", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(shipmentData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === "success") {
                alert("‚úÖ Shipment added!");

                // üìå –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –æ—Ç–≥—Ä—É–∑–∫—É –≤ FullCalendar
                calendar.addEvent({
                    title: `${document.getElementById("supplier").selectedOptions[0].text} ‚Üí ${document.getElementById("buyer").selectedOptions[0].text} (${grade})`,
                    start: `${date}T${time}`,
                    allDay: false
                });

                loadShipments(); // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–≥—Ä—É–∑–æ–∫
            } else {
                alert("‚ùå Error adding shipment");
            }
        })
        .catch(error => {
            console.error("Error adding shipment:", error);
            alert("‚ùå Server error");
        });
    });
});
