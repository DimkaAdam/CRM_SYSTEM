from django.shortcuts import render, redirect, get_object_or_404
from django.utils.http import urlencode
from django.contrib.auth import get_user_model, login
from django.contrib.auth.hashers import check_password
from django.views.decorators.http import require_http_methods
from django.contrib import messages

from .models import PortalCompany

def choose_company(request):
    companies = PortalCompany.objects.filter(is_active=True)
    return render(request, "entry_portal/choose_company.html", {"companies": companies})


@require_http_methods(["GET", "POST"])
def company_login(request):
    """
    –ü—Ä–æ—Å—Ç–æ–π –ª–æ–≥–∏–Ω –ø–æ '–æ–±—â–µ–º—É –ø–∞—Ä–æ–ª—é –∫–æ–º–ø–∞–Ω–∏–∏'.
    - –ë–µ—Ä—ë–º company_slug –∏–∑ —Å–µ—Å—Å–∏–∏
    - –°–≤–µ—Ä—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å company.shared_password (check_password)
    - –ï—Å–ª–∏ –æ–∫ ‚Üí —Å–æ–∑–¥–∞—ë–º/–Ω–∞—Ö–æ–¥–∏–º —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ login()
    """
    slug = request.session.get("company_slug")
    name = request.session.get("company_name")
    target = request.GET.get("next") or request.session.get("company_target") or "/"

    if not slug:
        # –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ ‚Äî –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞
        return redirect("/")

    company = get_object_or_404(PortalCompany, slug=slug, is_active=True)

    error = None
    if request.method == "POST":
        password = request.POST.get("password", "").strip()
        if not company.shared_password:
            error = "–ü–∞—Ä–æ–ª—å –¥–ª—è —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –∑–∞–¥–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        elif check_password(password, company.shared_password):
            # –°–æ–∑–¥–∞—ë–º/–Ω–∞—Ö–æ–¥–∏–º —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
            User = get_user_model()
            username = f"company__{company.slug}"
            user, created = User.objects.get_or_create(
                username=username,
                defaults={"is_active": True}
            )
            # –ü–∞—Ä–æ–ª—å —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ‚Äî –≤—Ö–æ–¥ –ø–æ company_password
            if created and hasattr(user, "set_unusable_password"):
                user.set_unusable_password()
                user.save(update_fields=["password"])

            # –õ–æ–≥–∏–Ω–∏–º
            login(request, user)

            # –ù–∞ –≤—Å—è–∫–∏–π ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏–º —É–¥–æ–±–Ω—ã–π ‚Äú—è—Ä–ª—ã–∫‚Äù –¥–ª—è —à–∞–ø–∫–∏
            request.session["company_slug"] = company.slug
            request.session["company_name"] = company.name
            request.session["company_target"] = target

            return redirect(target)
        else:
            error = "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å."

    return render(
        request,
        "entry_portal/company_login.html",
        {
            "title": f"–í—Ö–æ–¥ –≤ {name or slug}",
            "company": {"slug": slug, "name": name},
            "next": target,
            "error": error,
        }
    )

TARGETS = {
    "pmb-depot": "/scales/home/",
    "local-to-global": "/crm/deals/",
}

def portal_login(request, slug):
    company = get_object_or_404(PortalCompany, slug=slug, is_active=True)

    if request.method == "POST":
        password = request.POST.get("password", "").strip()

        if company.check_manager_password(password):
            role = "managers"
        elif company.check_staff_password(password):
            role = "staff"
        else:
            messages.error(request, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.")
            return render(request, "entry_portal/company_login.html", {"company": company})

        # üîπ –æ—á–∏—â–∞–µ–º –ø—Ä–µ–∂–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–ø–∞–Ω–∏–∏/—Ä–æ–ª–∏
        for k in ("company_slug", "company_name", "user_role"):
            request.session.pop(k, None)

        # üîπ —Ç–µ—Ö–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–µ—Å—Å–∏–∏
        User = get_user_model()
        user, created = User.objects.get_or_create(
            username=f"portal__{company.slug}",
            defaults={"is_active": True}
        )
        if created and hasattr(user, "set_unusable_password"):
            user.set_unusable_password()
            user.save(update_fields=["password"])

        login(request, user, backend="django.contrib.auth.backends.ModelBackend")

        # üîπ –∫–ª–∞–¥—ë–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        request.session["company_slug"] = company.slug
        request.session["company_name"] = company.name
        request.session["user_role"] = role

        # üîπ –≤—ã–±–∏—Ä–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –ø—É—Ç—å:
        # 1) –µ—Å–ª–∏ –≤ –ë–î —É –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω redirect_url ‚Äî –∏–¥—ë–º —Ç—É–¥–∞
        # 2) –∏–Ω–∞—á–µ –±–µ—Ä—ë–º –∏–∑ –º–∞–ø—ã TARGETS
        # 3) –∏–Ω–∞—á–µ –Ω–∞ –∫–æ—Ä–µ–Ω—å
        target = company.redirect_url or TARGETS.get(company.slug, "/")

        # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "/")
        if not target.startswith("/"):
            target = "/" + target

        return redirect(target)

    return render(request, "entry_portal/company_login.html", {"company": company})